{
  "InstanceName": "",
  "AdminkaConnectionString": "Data Source=(local)\\MSSQL13; Initial Catalog=Adminka; Integrated Security=SSPI;",

  "Logging": {
    "IncludeScopes": false,
    "LogLevel": {
      "Default": "Warning"
    }
  },

  "Routines": [
    {
      "Namespace": "",
      "Type": "",
      "Member": "",
      "For": "",
      "Resolvables": [
        {
          "Type": "AdminkaDbContextConfiguration",
          "Value": {
            "ApplyMigrations": false,
            "CreateDatabaseIfNotExists": false
          }
        },
        {
          "Type": "AdConfiguration",
          "Value": "{UseAdAuthorization: false}"
        },
        {
          "Type": "FakeAdConfiguration",
          "Value": {
            "FakeAdUser": "FakeDomain\\rpokrovskij",
            "FakeAdGroups": [ "FakeDomain\\Administrators", "FakeDomain\\Testers" ]
          }
        }
      ]
    },
    {
      "Type": "InjectedManager",
      "Member": "GetUserContext",
      "Resolvables": [
        {
          "Type": "LoggingConfiguration",
          "Value": { "FinishActivity": false }
        }
      ]
    }
  ],

  "nlog": {
    "internalLogToTrace": "true",
    "throwExceptions": "true",
    "targets": [
      {
        "name": "authentication",
        "type": "File",
        "fileName": "${basedir}/App_Data/authentication.log.txt",
        "enableArchiveFileCompression": "true",
        "archiveFileName": "${basedir}/App_Data/authentication.{#####}.zip",
        "archiveNumbering": "Date",
        "maxArchiveFiles": "3",
        "archiveEvery": "Month",
        "layout": "${date:format=dd.MM.yy HH\\:mm\\:ss}; ${event-context:item=Title}; ${message}"
      },
      {
        "name": "activities",
        "type": "File",
        "fileName": "${basedir}/App_Data/activities.log.txt",
        "enableArchiveFileCompression": "true",
        "archiveFileName": "${basedir}/App_Data/activities.{#####}.zip",
        "archiveNumbering": "Date",
        "maxArchiveFiles": "3",
        "archiveEvery": "Month",
        "layout": "${date:format=dd.MM.yy HH\\:mm\\:ss}; ${event-context:item=Title}; ${message}"
      },
      {
        "type": "AsyncWrapper",
        "name": "VerboseAsyncWrapper",
        "queueLimit": "10000",
        "timeToSleepBetweenBatches": "50",
        "batchSize": "100",
        "overflowAction": "Discard",
        "target": {
          "name": "verbose",
          "type": "File",
          "fileName": "${basedir}/App_Data/verbose.log.xml",
          "enableArchiveFileCompression": "true",
          "archiveFileName": "${basedir}/App_Data/verbose.{#####}.zip",
          "archiveNumbering": "Date",
          "maxArchiveFiles": "3",
          "archiveEvery": "Month",
          "layout": "${log4jxmlevent:includeSourceInfo=false:includeCallSite=true:includeMDC=false:appInfo=false:includeNDC=false:includeNLogData=true:indentXml=true}"
        }
      }
    ],
    "rules": [
      {
        "name": "Routine:*",
        "level": "Trace",
        "writeTo": "activities"
      },
      {
        "name": "Routine:*",
        "minlevel": "Debug",
        "writeTo": "VerboseAsyncWrapper"
      },
      {
        "name": "Authentication",
        "minlevel": "Debug",
        "writeTo": "authentication"
      }
    ]
  }
}

/*
<connectionStrings>
    <add name="adminka" connectionString="Data Source=(local)\MSSQL13; Initial Catalog=Adminka; Integrated Security=SSPI;" providerName="System.Data.SqlClient" />
  </connectionStrings>

  <routinesConfiguration>
    <routine>
      <resolvable type="AdminkaDbContextConfiguration" value="{ApplyMigrations:true, CreateDatabaseIfNotExists:true}" />
      <resolvable type="AdConfiguration" value="{UseAdAuthorization:false}" />
      <resolvable type="FakeAdConfiguration" value="{FakeAdUser:'FakeDomain\\rpokrovskij', FakeAdGroups:['FakeDomain\\Administrators','FakeDomain\\Testers']}" />
    </routine>
  </routinesConfiguration>

  <!-- consider those options: concurrentWrites="true" createDirs="true" autoFlush="true"-->
  <!-- throwExceptions should be "false" in production -->
  <nlog internalLogToTrace="true" throwExceptions="true">
    <targets>
      <target name="authentication" type="File" fileName="${basedir}/App_Data/authentication.log.txt" enableArchiveFileCompression="true" archiveFileName="${basedir}/App_Data/authentication.{#####}.zip" archiveNumbering="Date" maxArchiveFiles="3" archiveEvery="Month"  layout="${date:format=dd.MM.yy HH\:mm\:ss}; ${event-context:item=Title}; ${message}" />
      <target name="activities" type="File" fileName="${basedir}/App_Data/activities.log.txt" enableArchiveFileCompression="true" archiveFileName="${basedir}/App_Data/activities.{#####}.zip"  archiveNumbering="Date" maxArchiveFiles="3" archiveEvery="Month"  layout="${date:format=dd.MM.yy HH\:mm\:ss}; ${event-context:item=Title}; ${message}" />
      <!-- AsyncWrapper use additional thread on flush, but that is not a problem for rare verbose events -->
      <target type="AsyncWrapper" name="VerboseAsyncWrapper" queueLimit="10000" timeToSleepBetweenBatches="50" batchSize="100"  overflowAction="Discard">
        <target name="verbose" type="File" fileName="${basedir}/App_Data/verbose.log.xml" enableArchiveFileCompression="true" archiveFileName="${basedir}/App_Data/verbose.{#####}.zip" archiveNumbering="Date" maxArchiveFiles="3" archiveEvery="Month" layout="${log4jxmlevent:includeSourceInfo=false:includeCallSite=true:includeMDC=false:appInfo=false:includeNDC=false:includeNLogData=true:indentXml=true}" />
      </target>
    </targets>
    <rules>
      <logger name="Routine:*" level="Trace"    writeTo="activities" />
      <!-- exceptions posted with level=Error goes to Debug -->
      <logger name="Routine:*" minlevel="Debug" writeTo="VerboseAsyncWrapper" />
      <logger name="Authentication" minlevel="Debug" writeTo="authentication" />
    </rules>
  </nlog>*/