Move NLogTools, NLogTools.NETCore.Test, NLogTools.NETFramework.Test to separate VS solution / github project

Compare polyfils injector with COREPOLIFYLLS https://www.npmjs.com/package/core-js  (should be used for VS SPA projects to support IE 11)

Merge with https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-2.1&tabs=visual-studio#full ?

https://github.com/aspnet/benchmarks

https://github.com/sveinn-steinarsson/flot-downsample

https://github.com/reinforced/Reinforced.Typings

Routines
1) icon as bulb {}
2) DashboardCode at https://coveralls.io 
3) review method prefixes (compose, get, construct, compose, build)?
4) ComposeClone, ComposeCopy, ComposeEquals, ComposeDiff
5) Meta add leafs options
6) Meta add leafs from EF Core model

7) OdataToEntity

0. Migrate OpenCoverage
https://github.com/OpenCover/opencover/issues/601
http://stackoverflow.com/questions/36460254/vs2015-code-coverage-not-working-with-tests-in-asp-net-core-1-0-formerly-known/39324025#39324025

1. New nuget packages

 2. T4 to generate DTO C# classes and TypeScript interfaces.
   Generate Mapper functions.
   Note: if DTO are incldued to Abstraction assembly it is become very complex to compile the assembly;
      therefore C# DTO classes should be part of wcf service assembly, the same as TypeScript interfaces should be generated in web api project.

FUNCTIONALITY
------------------------------------------------------------------------------------
3. Catch logs to DB.
4. Search for correlation token.
5. IAuthenticationService to wcf. 

PR
------------------------------------------------------------------------------------
6. Inline includables goes to github as separated "one file" project
7. Circular javascript serializer goes to github as "one file" project
8. DashboardCode release on github
9. Publish routines, routines.storage.efcore on NUGET.
10. Create samples https://dotnetfiddle.net/
11. Write article about includes.

SERVER SIDE
------------------------------------------------------------------------------------
12.  authentication that shares dbcontext 
13.  complex views: share correlationToken or share routine through TempData. https://docs.microsoft.com/en-us/aspnet/core/mvc/views/partial
13a. @await Html.PartialAsync("AuthorPartial");  (check async especially with TempData)
13b. Html.RenderPartial("AuthorPartial");
14. UserContext caching.

**. Follow EFCore development: complextypes (versioned); many-to-many; columns order.

15. Check https://reactjs.net/getting-started/tutorial.html

CLIENT SIDE
------------------------------------------------------------------------------------
Plan:
React / boostrap app
React / redux app
Offline react app

Web Api Questions:
a) how to pass error details instead off requested data?
b) how to separate SPA to several pages/islands


Check Start Up lounch platforms 
COSS, Starbase, 
Kickico (https://habrahabr.ru/post/336702/.com)

Cloud deployment https://habrahabr.ru/post/332130/.com Выбираем бесплатный сервер в облаке для тестовых целей, домашних проектов и т.д


TOOLS
------------------------------------------------------------------------------------
appveyor - study from benchmarkdotnet