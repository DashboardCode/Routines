@page
@model UserEditModel
@{
    ViewData["SubTitle"] = $"Edit User ({Model.Entity.UserId})";
}

@section Messages {
    <partial name="_MessagesPartial" />
}

<form method="post" class="adminka-panel">
    <input hidden type="hidden" asp-for="@Model.Entity.UserId" />
    <input hidden type="hidden" asp-for="@Model.Entity.RowVersion" />
    <input hidden type="hidden" asp-for="@Model.Crud.Referrer.Href" name="Referrer" />

    <div class="adminka-title d-flex flex-row justify-content-between">
        <h3>Edit User (@Model.Entity.UserId)</h3>
        <a class="adminka-navigation adminka-icon-before adminka-icon-before-clear" 
           href="@Model.Crud.Referrer.Href"></a>
    </div>

    <div class="adminka-form-container">
        <div class="form-group row">
            <label class="col-form-label col-sm-2" for="edit-user-login-id">Login</label>
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Entity.LoginName, new { htmlAttributes = new { @id = "edit-user-login-id", @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Entity.LoginName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="col-form-label col-sm-2" for="edit-user-first-name-id">First Name</label>
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Entity.FirstName, new { htmlAttributes = new { @id = "edit-user-first-name-id", @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Entity.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="col-form-label col-sm-2" for="edit-user-second-name-id">Second Name</label>
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Entity.SecondName, new { htmlAttributes = new { @id = "edit-user-second-name-id", @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Entity.SecondName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="control-label col-sm-2" for="edit-user-groups-id">Groups</label>
            <div class="col-sm-10">
                @Html.ListBox("Groups", ViewBag.GroupsMultiSelectList as MultiSelectList, new { @id = "edit-user-groups-id", @class = "form-control d-none bootstrap-multiselect", @readonly = "readonly", @disabled = "disabled" })
                @Html.ValidationMessage("Groups", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="control-label col-sm-2" for="edit-user-roles-id">Roles</label>
            <div class="col-sm-10">
                @Html.ListBox("Roles", ViewBag.RolesMultiSelectList as MultiSelectList, new { @id = "edit-user-roles-id", @class = "form-control d-none bootstrap-multiselect" })
                @Html.ValidationMessage("Roles", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="col-form-label col-sm-2" for="edit-user-privileges-allowed-id">Privileges Allowed</label>
            <div class="col-sm-10">
                @Html.ListBox("PrivilegesAllowed", ViewBag.PrivilegesAllowedMultiSelectList as MultiSelectList, new { @id = "edit-user-privileges-allowed-id", @class = "form-control d-none bootstrap-multiselect" })
                @Html.ValidationMessage("PrivilegesAllowed", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row  adminka-form-group-bsmultiselect-scratched">
            <label class="col-form-label col-sm-2" for="edit-user-privileges-denied-id">Privileges Denied</label>
            <div class="col-sm-10">
                @Html.ListBox("PrivilegesDenied", ViewBag.PrivilegesDeniedMultiSelectList as MultiSelectList, new { @id = "edit-user-privileges-denied-id", @class = "form-control d-none bootstrap-multiselect" })
                @Html.ValidationMessage("PrivilegesDenied", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="adminka-buttons adminka-buttons-update">
            <div class="form-group">
                <div class="d-flex flex-row">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a class="btn btn-secondary adminka-icon-before adminka-icon-before-back ml-3" href="@Model.Crud.Referrer.Href">Go Back</a>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_MultiSelectScriptPartial" />
}