@page
@model GroupsModel

@{
    ViewData["SubTitle"] = "Groups";
    var UserContext = (DashboardCode.AdminkaV1.UserContext)ViewBag.UserContext;
    var tableId = "adminka-groups-table-id";
}
<h3 class="px-3">Groups</h3>

<table id="@tableId" class="table table-hover table-bordered mainTable">
    <thead>
        <tr>
            <th class="adminka-action-button-group" width="1rem">
                @if (UserContext.HasPrivilege(Privilege.ConfigureSystem))
                {
                    var urlCreateAction = @Url.Action("Create", "Groups");
                    <a class="btn-sm" asp-area="Auth" asp-page="GroupCreate"><span class="material-icons">note_add</span></a>
                }
            </th>
            <th>
                ID
            </th>
            <th>
                Name
            </th>
            <th>
                AD Group
            </th>
            <th>
                Users
            </th>
            <th>
                Roles
            </th>
            <th>
                Privileges
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.List)
        {
            <tr>
                <td class="adminka-action-button-group">
                    <div class="d-flex flex-row">
                        <a class="btn-sm" asp-area="Auth" asp-page="Group" asp-route-id="@item.GroupId"><span class="material-icons">insert_drive_file</span></a>
                        @if (UserContext.HasPrivilege(Privilege.ConfigureSystem))
                        {
                            <div class="d-flex flex-column">
                                <a class="btn-xsm" asp-area="Auth" asp-page="GroupEdit" asp-route-id="@item.GroupId"><span class="material-icons">edit</span></a>
                                <a class="btn-xsm" asp-area="Auth" asp-page="GroupDelete" asp-route-id="@item.GroupId"><span class="material-icons">delete</span></a>
                            </div>
                        }
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GroupId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GroupName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GroupAdName)
                </td>
                <td>
                    @foreach (var u in item.GetUsers())
                    {
                        <a class="badge" asp-area="Auth" asp-page="User" asp-route-id="@u.UserId">@u.LoginName</a>
                    }
                </td>
                <td>
                    @foreach (var r in item.GetRoles())
                    {
                        <a class="badge" asp-area="Auth" asp-page="Role" asp-route-id="@r.RoleId">@r.RoleName</a>
                    }
                </td>
                <td>
                    @foreach (var p in item.GetPrivileges())
                    {
                        if (p.Item2)
                        {
                            <a class="badge" asp-area="Auth" asp-page="Privilege" asp-route-id="@p.Item1.PrivilegeId">@p.Item1.PrivilegeName</a>
                        }
                        else
                        {
                            <a class="badge scratched" asp-area="Auth" asp-page="Privilege" asp-route-id="@p.Item1.PrivilegeId" style="text-decoration:line-through">@p.Item1.PrivilegeName</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var tableId = '#' + '@tableId';
            var $table = $(tableId).dataTable(
                {
                    language: { search: "", searchPlaceholder: "Filter", lengthMenu:"_MENU_" },
                    stateSave: true,
                    dom: '<"d-flex flex-row justify-content-end"f>rt<"d-flex flex-row justify-content-between"lp>',
                    "columnDefs": [
                        { "searchable": false, "targets": 0 },
                        { "orderable": false, "targets": 0 }
                    ]
                }
            );
        });
    </script>
}
